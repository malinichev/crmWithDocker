version: "3.8"

services:
  admin:
    build:
      context: ./admin
    networks:
      - public
    environment:
      apiUrl: ${apiUrl}
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT_DOCKER}"
    volumes:
      - ./admin:/admin:ro
      - ./admin/scripts:/admin/scripts
      - ./admin/extractedTranslations:/admin/extractedTranslations
    stdin_open: true
    tty: true
    depends_on:
      - server

  server:
    build:
      context: ./server
    command: npm run start
    networks:
      - private
      - public
    env_file:
      - .env
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - ./server/src:/server/src:ro
      - ./server:/server
    depends_on:
      - postgres

  postgres:
    image: postgres:14.8-alpine3.18
    restart: always
    networks:
      - private
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - postgres:/var/lib/postgresql/data
  #  pgadmin:
  #    image: dpage/pgadmin4:4.23
  #    environment:
  #      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
  #      PGADMIN_DEFAULT_PASSWORD: password
  #      PGADMIN_LISTEN_PORT: 80
  #    ports:
  #      - 15432:80
  #    volumes:
  #      - pgadmin:/var/lib/pgadmin
  #    depends_on:
  #      - postgres
networks:
  public:
    driver: bridge
  private:
    driver: bridge

volumes:
  postgres:
#  pgadmin:
