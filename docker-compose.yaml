version: "3.8"

services:
#  admin:
#    build:
#      context: ./admin
#    networks:
#      - public
#    ports:
#      - "${CLIENT_PORT}:${CLIENT_PORT_DOCKER}"
#    volumes:
#      - ./admin:/admin:ro
#      - ./admin/build:/admin/build
#      - ./admin/scripts:/admin/scripts
#      - ./admin/extractedTranslations:/admin/extractedTranslations
#    stdin_open: true
#    tty: true
#    depends_on:
#      - server

  server:
    build:
      context: ./server
    command: npm run start
    networks:
      - private
      - public
    ports:
      - "3001:3001"
    volumes:
      - ./server/src:/server/src:ro
      - ./server:/server
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
    depends_on:
      - postgres

  postgres:
    image: postgres:14.8-alpine3.18
    restart: always
    networks:
      - private
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - postgres:/var/lib/postgresql/data
  backup:
#    docker-compose run backup
    build:
      context: ./backup
    environment:
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: ${DB_USER}
      PGPASSWORD: ${DB_PASSWORD}
      PGDATABASE: ${DB_NAME}
    volumes:
      - ./backup/data:/backup/data
    depends_on:
      - postgres
    networks:
      - private
    command: "/backup/scripts/backup.sh"
  restore:
#    docker-compose run -e BACKUP_FILE=/backup/data/site_with_admin_202407050933.sql restore
    build:
      context: ./backup
    environment:
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: ${DB_USER}
      PGPASSWORD: ${DB_PASSWORD}
      PGDATABASE: ${DB_NAME}
#      BACKUP_FILE: /backup/data/site_with_admin_init.sql
    volumes:
      - ./backup/data:/backup/data
    depends_on:
      - postgres
    networks:
      - private
    command: "/backup/scripts/restore.sh"
  #  pgadmin:
  #    image: dpage/pgadmin4:4.23
  #    environment:
  #      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
  #      PGADMIN_DEFAULT_PASSWORD: password
  #      PGADMIN_LISTEN_PORT: 80
  #    ports:
  #      - 15432:80
  #    volumes:
  #      - pgadmin:/var/lib/pgadmin
  #    depends_on:
  #      - postgres
networks:
  public:
    driver: bridge
  private:
    driver: bridge

volumes:
  postgres:
#  pgadmin:
